akka {
    log-config-on-start = on
    stdout-loglevel = DEBUG
    loglevel = DEBUG
    
    actor {
        provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
        debug {
          receive = on
          autoreceive = on
          lifecycle = on
          event-stream = on
          unhandled = on
        }
        deployment {
           /localactor {
               router = round-robin-pool
               nr-of-instances = 1
               cluster {
                        enabled = on
                        max-nr-of-instances-per-node = 1
                        allow-local-routees = off
                        use-role = fractal
                 }
            }        
            # TODO Lab 3 (a)
            # define a remote deployment section
            #   - use port 8090
            #   - you can use an arbitrary name for the "actor system"
            # reference doc here https://getakka.net/articles/remoting/deployment.html 
           /remoteactor {
               router = round-robin-pool
               nr-of-instances = 8
               cluster {
                        enabled = on
                        max-nr-of-instances-per-node = 5
                        allow-local-routees = off
                        use-role = fractal
                 }
            }
        }
    }
    remote {
        dot-netty.tcp {
		        port = 0
		        hostname = "0.0.0.0"
                # the values below this comment may be overridden by Akka.Bootstrap.Docker at runtime
                #public-hostname = "localhost"		        
        }
    }
    cluster {
            seed-nodes = ["akka.tcp://fractal@lighthouse:4053" ]
            roles = [fractal]
    }
  
    persistence {
      publish-plugin-commands = on
      journal {
        plugin = "akka.persistence.journal.mongodb"
        mongodb {
          # qualified type name of the MongoDb persistence journal actor
          class = "Akka.Persistence.MongoDb.Journal.MongoDbJournal, Akka.Persistence.MongoDb"

          # connection string used for database access                
          connection-string = "mongodb://127.0.0.1:27017/akkadb"

          # should corresponding journal table's indexes be initialized automatically
          auto-initialize = off

          # dispatcher used to drive journal actor
          plugin-dispatcher = "akka.actor.default-dispatcher"

          # MongoDb collection corresponding with persistent journal
          collection = "EventJournal"

          # metadata collection
          metadata-collection = "Metadata"
        }
      }
      snapshot-store {
        plugin = "akka.persistence.snapshot-store.mongodb"
        mongodb {
          # qualified type name of the MongoDB persistence snapshot actor
          class = "Akka.Persistence.MongoDb.Snapshot.MongoDbSnapshotStore, Akka.Persistence.MongoDb"

          # connection string used for database access
          connection-string = "mongodb://127.0.0.1:27017/akkadb"

          # should corresponding snapshot's indexes be initialized automatically
          auto-initialize = off

          # dispatcher used to drive snapshot storage actor
          plugin-dispatcher = "akka.actor.default-dispatcher"

          # MongoDb collection corresponding with persistent snapshot store
          collection = "SnapshotStore"
        }
      }
    }
}